==========================
Docker commands and Notes
==========================

$ docker

$ docker --version

$ docker --help

$ docker info

-> Lifecycle:

$ docker create  : creates a container but does not start it.
$ docker rename  : allows the container to be renamed.
$ docker run     : creates and starts a container in one operation.
$ docker rm      : deletes a container.
$ docker update  : updates a container's resource limits.


-> Starting and Stopping

$ docker start   : starts a container so it is running.
$ docker stop    : stops a running container.
$ docker restart : stops and starts a container.
$ docker pause   : pauses a running container, "freezing" it in place.
$ docker unpause : will unpause a running container.
$ docker wait    : blocks until running container stops.
$ docker kill    : sends a SIGKILL to a running container.
$ docker attach  : will connect to a running container.


-> CPU Constraints

$ docker run -it -c 512 agileek/cpuset-test


-> connecting to a remote Docker registry to download docker images.

$ login  : Log in to a Docker registry
$ logout : Log out from a Docker registry
$ search : Search the Docker Hub for images
$ push   : Push an image or a repository to a registry
$ pull   : Pull an image or a repository from a registry
$ commit : Create a new image from a containerâ€™s changes


$ docker search <name>


-> Docker context

$ docker context ls
$ docker context inspect default 


-------------------------------------------------------------

====================================
Docker documentation
===================================


Management Commands:
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.



-> Start / Stop docker engine
 
systemctl start docker.service 
systemctl stop docker.service 

